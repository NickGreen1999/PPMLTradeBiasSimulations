rng(123); % Set seed for reproducibility

% Define parameters
C = 1000; % Number of countries
T = 10; % Number of years
F = 1; % Frequency of data (4=quarterly data)
N = C*T*F; % Number of observations
K = 2;   % Number of dimensions for parameters of interest
L = 2; % Number of dimensions for nuisance parameters
P = 2; % Number of dimensions for dummy variables
num_simulations = 5000; % Number of simulations
theta_true = ones(K, 1) * 0.5; % True parameter of interest kx1
beta_true = ones(L, 1) * 0.1; % True high-dimensional nuisance parameter Lx1
sigma_true = ones(P, 1) * 0.5; % True dummy variable parameter

% Initialize variables to store estimated parameters and bias
theta_hat_all = zeros(K, num_simulations); % Estimated parameters of interest
beta_hat_all = zeros(L, num_simulations); % Estimated nuisance parameters
sigma_hat_all = zeros(P, num_simulations);

% Step 1 & 2: Estimate Model & Store Estimates
tic
parfor (i = 1:num_simulations, feature('numcores'))
    rng(i)
    [theta_hat_all(:, i), beta_hat_all(:, i), sigma_hat_all(:, i), avg_Y(:, i), lambda_true(:, i)] = PPMLEstimation050324(N, K, L, P, theta_true, beta_true, sigma_true);
end
toc


% Step 3: Analyze Results
% Calculate average bias
avg_theta_hat = mean(theta_hat_all, 2); % Average estimate for parameters of interest
avg_beta_hat = mean(beta_hat_all, 2); % Average estimate for nuisance parameters
avg_sigma_hat = mean(sigma_hat_all, 2);

% Display average bias
disp('Average Estimate for Parameters Generated by Normal Distribution:');
disp(avg_theta_hat);
disp('Average Estimate for Parameters by Chi^2 Distribution:');
disp(avg_beta_hat);
disp('Average Estimate for Dummy Parameters:');
disp(avg_sigma_hat);
